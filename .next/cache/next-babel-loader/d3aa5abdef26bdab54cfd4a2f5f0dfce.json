{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renar\\\\Downloads\\\\Capstone Option 2_starter (1)\\\\pages\\\\client.js\";\nvar __jsx = React.createElement;\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport React, { useState } from \"react\";\n\nfunction Client() {\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  console.log(`URL: ${API_URL}`);\n  const link = new HttpLink({\n    uri: `${API_URL}/graphql`\n  });\n  const cache = new InMemoryCache();\n  const client = new ApolloClient({\n    link,\n    cache\n  });\n\n  __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 2\n    }\n  });\n}\n\nexport default Client;","map":{"version":3,"sources":["C:/Users/renar/Downloads/Capstone Option 2_starter (1)/pages/client.js"],"names":["ApolloProvider","ApolloClient","HttpLink","InMemoryCache","React","useState","Client","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","link","uri","cache","client"],"mappings":";;AAAA,SAAQA,cAAR,EAAuBC,YAAvB,EAAoCC,QAApC,EAA8CC,aAA9C,QAAkE,gBAAlE;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,SAASC,MAAT,GAAkB;AACjB,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,QAAOL,OAAQ,EAA5B;AACA,QAAMM,IAAI,GAAG,IAAIX,QAAJ,CAAa;AAAEY,IAAAA,GAAG,EAAG,GAAEP,OAAQ;AAAlB,GAAb,CAAb;AACA,QAAMQ,KAAK,GAAG,IAAIZ,aAAJ,EAAd;AACA,QAAMa,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAACY,IAAAA,IAAD;AAAME,IAAAA;AAAN,GAAjB,CAAf;;AACA,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACD,eAAeV,MAAf","sourcesContent":["import {ApolloProvider,ApolloClient,HttpLink, InMemoryCache} from '@apollo/client';\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nfunction Client() {\r\n const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n console.log(`URL: ${API_URL}`)\r\n const link = new HttpLink({ uri: `${API_URL}/graphql`})\r\n const cache = new InMemoryCache()\r\n const client = new ApolloClient({link,cache});\r\n <ApolloProvider client={client}/>\r\n}\r\nexport default Client;"]},"metadata":{},"sourceType":"module"}