{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* /pages/restaurants.js */\nimport React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Cart from \"../components/cart\";\nimport AppContext from \"../components/context\";\nimport client from '../components/client';\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Row } from \"reactstrap\";\nvar GET_RESTAURANT_DISHES = gql(_templateObject());\n\nfunction Restaurants() {\n  var _useState = useState(\"\"),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var appContext = useContext(AppContext);\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: router.query.id\n    },\n    client: client\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) return \"Error Loading Dishes\";\n  if (loading) return __jsx(\"h1\", null, \"Loading ...\");\n\n  if (data.restaurant) {\n    var restaurant = data.restaurant;\n    var searchQuery = restaurant.dishes.filter(function (res) {\n      return res.name.toLowerCase().includes(query);\n    });\n\n    if (searchQuery.length > 0) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"search\"\n      }, __jsx(\"h2\", null, \" Local Dishes\"), __jsx(InputGroup, null, __jsx(InputGroupAddon, {\n        addonType: \"append\"\n      }, \" Search \"), __jsx(Input, {\n        onChange: function onChange(e) {\n          return setQuery(e.target.value.toLocaleLowerCase());\n        },\n        value: query\n      })), __jsx(\"br\", null)), __jsx(\"h1\", null, restaurant.name), __jsx(Row, null, searchQuery.map(function (res) {\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          style: {\n            padding: 0\n          },\n          key: res.id\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 10px\"\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 250\n          },\n          src: true ? res.image.url : \"\".concat(process.env.NEXT_PUBLIC_API_URL).concat(res.image.url)\n        }), __jsx(CardBody, null, __jsx(CardTitle, null, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n          className: \"jsx-2227400293\" + \" \" + \"card-footer\"\n        }, __jsx(Button, {\n          outline: true,\n          color: \"primary\",\n          onClick: function onClick() {\n            return appContext.addItem(res);\n          }\n        }, \"+ Add To Cart\"), __jsx(_JSXStyle, {\n          id: \"2227400293\"\n        }, [\"a.jsx-2227400293{color:white;}\", \"a.jsx-2227400293:link{-webkit-text-decoration:none;text-decoration:none;color:white;}\", \".container-fluid.jsx-2227400293{margin-bottom:30px;}\", \".btn-outline-primary.jsx-2227400293{color:#007bff !important;}\", \"a.jsx-2227400293:hover{color:white !important;}\"]))));\n      }), __jsx(Col, {\n        xs: \"3\",\n        style: {\n          padding: 0\n        }\n      }, __jsx(\"div\", null, __jsx(Cart, null)))));\n    }\n  }\n\n  return __jsx(\"h1\", null, \"Add Dishes\");\n}\n\nexport default Restaurants;","map":null,"metadata":{},"sourceType":"module"}